    bool TbusDomainContext::QueuePacket(const std::string &busid, SInt32 const* inData, UInt32 inSize)
    {
        if (mClient.out_queue_ == nullptr) 
            return false;
        tbuspp_id_t dest = tbuspp_busid_aton(busid.c_str());
        tbuspp_init_msg_param(&param);

        std::unique_lock<std::mutex> locker(mTbusppDataMutex);
        int result = tbuspp_queue_write(mClient.out_queue_, dest, inData, inSize, &param);
        return result;
    }

    bool TbusDomainContext::PopPacket(SInt32 const*& outData, UInt32& outSize)
    {
        static char buffer[1024] = { 0 };
        if (mClient.in_queue_ == nullptr)
            return false;
        tbuspp_msg_desc_t desc = { 0 };
        auto msg = tbuspp_queue_peek(mClient.in_queue_, &outSize, &desc);

        Assert(outSize <= 1024);
        memcpy(buffer, msg, outSize);
        outData = reinterpret_cast<SInt32 const*>(buffer);

        tbuspp_queue_pop(mClient.in_queue_);
        return outSize > 0;
    }